#!/usr/bin/env python3

""" 测试驱动计算 with doctest
与我的测试框架结合的 doctest 例子, 其他说明见 read_me.py。

doctest 是 Python 自带的文档测试方案,
但其适用场景跟我的测试框架略有不同,
因此直接让学生用这个会增加他们的困惑。

不过, 作为 Python 自带的方案,
我的测试框架也就顺手提供个辅助,
万一有好学的学生自己折腾了这个东西也说不定呢。

Python IDLE 是个好东西, 
但对于小学生来说,
任何输入上的失误都将导致他们把大量时间浪费在重头输入这段代码上,
因此, 我干脆不在课堂上跟他们提这个。
这也间接导致了他们不大可能明白 doctest 到底在干嘛,
而且 doctest 的输出太啰嗦(土鳖), 且没有配色,
不如我测试框架的输出的可读性好。

在我的测试框架下, doctest 激活规则:
    1. 至少要有一个 doctest, 哪怕它什么都不做
        1. 例如 `>>> None`
    2. 可以在行的开头使用 # 注释掉该行的 doctest
    3. 如果没有 @test, 本测试程序会完全退让给 doctest, 相当于直接运行 `python -m doctest -v` 
    4. 如果有 @test, 测试程序【只会】对所有“没有说明 output”的测试用例启动 doctest
        1. 此时就是为了自动化“标准输入”, 强迫学生用键盘输入数据的学习体验真的是糟糕透了

>>> doctest_example()
10.0

@test 糟糕的测试方案竟然要 doctest 读取键盘数据
input:
10

"""

###################################################################################################
def doctest_example():
    return float(input())
